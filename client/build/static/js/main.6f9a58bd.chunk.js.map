{"version":3,"sources":["config.js","Data.js","Context.js","PrivateRoute.js","components/Header.js","components/Courses.js","components/CourseDetail.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/UserSignIn.js","components/UserSignUp.js","components/NotFound.js","App.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","emailAddress","password","fetch","this","api","response","status","json","then","data","Error","user","errors","course","id","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","signIn","a","getUser","setState","set","expires","signOut","remove","value","actions","props","children","Component","Consumer","withContext","context","component","rest","render","to","pathname","from","location","Header","authUser","className","Fragment","firstName","lastName","PureComponent","CourseList","getItems","catch","err","courses","map","index","key","href","title","version","xmlns","x","y","viewBox","points","ReactMarkdown","require","CourseDetail","deleteItem","bind","update","ifAuth","match","params","User","deleteCourse","alert","history","push","deleted","isLoggedIn","onClick","source","description","escapeHtml","estimatedTime","materialsNeeded","cancel","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","type","errorsDisplay","length","error","i","CreateCourse","change","name","target","courseJSON","userId","createCourse","console","log","Form","onChange","placeholder","UpdateCourse","updateCourse","getCourseDetails","UserSignIn","UserSignUp","createUser","HeaderWithContext","CourseListWithContext","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","App","basename","PrivateRoute","exact","NotFound","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f9a58bd.chunk.js","sourcesContent":["export default {            \n    apiBaseUrl: 'http://localhost:5000/api',\n};","import config from './config';\n\nexport default class Data {\n  api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\n    const url = config.apiBaseUrl + path;\n\n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n\n\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, 'GET', null, true, { emailAddress, password });\n    if (response.status === 200) {\n      return response.json()\n        .then(data => data);\n    }\n    else if (response.status === 401) {\n      return null;\n    }\n    else {\n      throw new Error();\n    }\n  }\n\n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    if (response.status === 201) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } \n    else {\n      throw new Error();\n    }\n  }\n\n  async createCourse(course, emailAddress, password) {\n    const response = await this.api(`/courses`, 'POST', course, true, { emailAddress, password });\n    if (response.status === 201) {\n      return [];\n    }\n    else if (response.status !== 200) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } \n    else {\n      throw new Error();\n    }\n\n  }\n\n  async updateCourse(course, id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, 'PUT', course, true, { emailAddress, password });\n    if (response.status === 204) {\n      return [];\n    }\n    else if (response.status !== 204) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n\n\n  async deleteCourse(id, emailAddress, password) {\n\n    const response = await this.api(`/courses/${id}`, 'DELETE', null, true, { emailAddress, password });\n\n    if (response.status === 204) {\n      return response;\n    } else {\n      return response;\n    }\n\n  }\n\n}\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Data from './Data';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n\n  state = {\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null,\n    password: Cookies.getJSON('password') || null,\n    id: null,\n  };\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  render() {\n    const { authenticatedUser } = this.state;\n    const { password } = this.state;\n    // const { title } = this.state;\n    const value = {\n      authenticatedUser,\n      password,\n      // title,\n      data: this.data,\n      actions: {\n        signIn: this.signIn,\n        signOut: this.signOut\n      },\n    };\n    return (\n      <Context.Provider value={value}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n\n  signIn = async (emailAddress, password) => {\n    const user = await this.data.getUser(emailAddress, password)\n\n    if (user !== null) {\n      this.setState(() => {\n        return {\n          authenticatedUser: user,\n          password: password,\n          id: user.id,\n        };\n      });\n      Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\n      Cookies.set('password', JSON.stringify(password), { expires: 1 });\n    }\n    return user;\n  }\n\n  signOut = () => {\n    this.setState({ authenticatedUser: null });\n    this.setState({ password: null });\n    Cookies.remove('authenticatedUser');\n    Cookies.remove('password');\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n/**\n * A higher-order component that wraps the provided component in a Context Consumer component.\n * @param {class} Component - A React component.\n * @returns {function} A higher-order component.\n */\n\nexport default function withContext(Component) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {context => <Component {...props} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n  return (\n    <Consumer>\n      {context => (\n        <Route\n          {...rest}\n          render={props => context.authenticatedUser ? (\n            <Component {...props} />\n          ) : (\n              <Redirect to={{\n                pathname: '/signin',\n                state: { from: props.location }\n              }} />\n            )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends React.PureComponent {\n  render() {\n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n\n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <Link to=\"/\"><h1 className=\"header--logo\">Courses</h1></Link>\n          <nav>\n            {authUser ?\n              <React.Fragment>\n                <span>Welcome, {authUser.firstName} {authUser.lastName} {authUser.id}!</span>\n                <Link to=\"/signout\">Sign Out</Link>\n              </React.Fragment>\n\n              :\n\n              <React.Fragment>\n                <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n                <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n              </React.Fragment>\n            }\n          </nav>\n        </div>\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default class CourseList extends Component {\n    /** https://reactjs.org/docs/react-component.html#constructor\n     * ? constructor is called because we are binding methods and we are initializing state\n     * ? super is used to avoid bugs      \n     */\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            'courses': []\n        };\n    }\n\n    /** as soon as this component mounts execute the 'getItems' method */\n    componentDidMount() {\n        this.getItems();\n    }\n\n    /**fetches courses from the api */\n    async getItems() {\n        await fetch('http://localhost:5000/api/courses')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ 'courses': data.course })\n            })\n            .catch(err => (Error('There seems to be problem ', err)));\n    }\n\n    render() {\n        return (\n            <div className=\"bounds\">\n                {/* maps over the items that are now in `courses` state */}\n                {this.state.courses.map((course, index) => {                    \n                    return (                        \n                        <div key={course.id} className=\"grid-33\">                                 \n                            <a className=\"course--module course--link\" href={`http://localhost:3000/courses/${course.id}`}>\n                                <h4 className=\"course--label\">Course</h4>\n                                <h3 className=\"course--title\">{course.title}</h3>\n                            </a>\n                        </div>\n                    )\n                })}\n\n                {/* Button to create new course */}\n                <div className=\"grid-33\">\n                    <Link className=\"course--module course--add--module\" to=\"/courses/create\">\n                        <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 13 13\" className=\"add\">\n                            <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n                        </svg>New Course</h3>\n                    </Link>\n                </div>\n            </div>\n        );\n    };\n};\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport {\n    Link,\n    Redirect,\n} from \"react-router-dom\";\n// const ReactMarkdown = require('react-markdown');\nconst ReactMarkdown = require('react-markdown/with-html');\n\nexport default class CourseDetail extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.deleteItem = this.deleteItem.bind(this);\n        this.update = this.update.bind(this);\n        this.ifAuth = this.ifAuth.bind(this);\n        this.state = {\n            'courses': [],\n            'deleted': false,            \n            'User': [],\n            'emailAddress': null,\n            'password': null,\n            'isLoggedIn': false\n        };\n    }\n    componentDidMount() {\n        this.getItems();\n    }\n\n \n async  getItems() {\n      await  fetch(`http://localhost:5000/api/courses/${this.props.match.params.id}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ 'courses': data.course, 'User': data.course.User });\n                const { context } = this.props;\n                const authUser = context.authenticatedUser;\n                if (authUser) {\n                    this.setState({ 'emailAddress': authUser.emailAddress, 'password': authUser.password })\n                }\n                this.ifAuth();\n            })\n            .catch(err => (Error('There seems to be problem ', err)));\n    \n    }\n\n    deleteItem() {\n        const { context } = this.props;\n        const id = this.props.match.params.id;\n        const emailAddress = this.state.emailAddress;\n        const password = context.password;\n\n        context.data.deleteCourse(id, emailAddress, password)\n            .then(() => {\n                alert(`Course ${this.state.courses.id} has been deleted`);\n            })\n            .then(() => {\n                this.props.history.push('/');\n            });\n    }\n\n    update() {\n        this.props.history.push(`/courses/${this.props.match.params.id}/update`);        \n    }\n    ifAuth() {        \n        const { context } = this.props;\n        const authUser = context.authenticatedUser;\n        if (authUser) {\n            if (authUser.emailAddress === this.state.User.emailAddress) {\n                this.setState({ 'isLoggedIn': true });\n            } \n        } else {\n            this.setState({ 'isLoggedIn': false });\n        }\n    }\n\n    render() {\n        // if deleteItems updates state of 'deleted' then redirect\n        const { deleted } = this.state;\n        const { isLoggedIn } = this.state;\n        if (deleted) {\n            return <Redirect to='/' />;\n        }\n\n        return (\n            <div>\n                <div className=\"actions--bar\">\n                    <div className=\"bounds\">\n                        <div className=\"grid-100\">\n                            {isLoggedIn ?\n                                <React.Fragment>\n                                    <span>\n                                        {/* pass params to Link https://stackoverflow.com/questions/30115324/pass-props-in-link-react-router/30115524 */}\n                                        <Link to=\"#\" onClick={this.update} className=\"button\">Update Course</Link>                                        \n                                        {/* delete button */}\n                                        <Link to=\"#\" onClick={this.deleteItem} className=\"button\">Delete Course\n                                    </Link>\n                                        <Link to=\"/\" className=\"button button-secondary\">Return to List</Link>\n                                    </span>\n                                </React.Fragment>\n                                :\n\n                                <React.Fragment>\n                                    <Link to=\"/\" className=\"button button-secondary\">Return to List</Link>\n                                </React.Fragment>\n                            }\n\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"bounds course--detail\">\n                    <div className=\"grid-66\">\n                        <div className=\"course--header\">\n                            <h4 className=\"course--label\">Course id: {this.state.courses.id}</h4>\n                            <h3 className=\"course--title\">{this.state.courses.title}</h3>\n                            {/* insert author of course */}\n                            <p>By: {this.state.User.firstName} {this.state.User.lastName}</p>\n                        </div>\n                        <div className=\"course--description\">\n\n                            <ReactMarkdown\n                                source={this.state.courses.description}\n                                escapeHtml={false}\n                            />\n\n                        </div>\n                    </div>\n                    <div className=\"grid-25 grid-right\">\n                        <div className=\"course--stats\">\n                            <ul className=\"course--stats--list\">\n                                <li className=\"course--stats--list--item\">\n                                    <h4>Estimated Time</h4>\n                                    <h3>{this.state.courses.estimatedTime}</h3>\n                                </li>\n                                <li className=\"course--stats--list--item\">\n                                    <h4>Materials Needed</h4>\n                                    <ReactMarkdown\n                                        source={this.state.courses.materialsNeeded}\n                                        escapeHtml={false}\n                                    />\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n// { `/courses/${this.props.match.params.id}/update` }","import React from 'react';\n\nexport default (props) => {\n  const {\n    cancel,\n    errors,\n    submit,\n    submitButtonText,\n    elements,\n  } = props;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    submit();\n  }\n\n  function handleCancel(event) {\n    event.preventDefault();\n    cancel();\n  }\n\n  return (\n    <div>\n      <ErrorsDisplay errors={errors} />\n      <form onSubmit={handleSubmit}>\n        {elements()}\n        <div className=\"pad-bottom\">\n          <button className=\"button\" type=\"submit\">{submitButtonText}</button>\n          <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction ErrorsDisplay({ errors }) {\n  let errorsDisplay = null;\n\n  if (errors.length) {\n    errorsDisplay = (\n      <div>\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\n        <div className=\"validation-errors\">\n          <ul>\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return errorsDisplay;\n}\n","import React, { Component } from 'react';\nimport Form from './Form';\n\nexport default class CreateCourse extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            errors: [],\n            password: null,\n            emailAddress: null,\n            title: '',\n            description: '',\n            estimatedTime: '',\n            materialsNeeded: '',\n            userId: null\n\n        };\n    }\n\n    componentDidMount() {\n        this.isLoggedIn();\n    }\n\n    async isLoggedIn() {\n        const { context } = this.props;\n        const authUser = context.authenticatedUser;\n        if (authUser) {\n            await this.setState({ 'emailAddress': authUser.emailAddress, 'password': authUser.password, 'userId': authUser.id });\n        }\n    }\n    change = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n    submit = () => {\n        const { context } = this.props;\n        const password = context.password;\n        const emailAddress = this.state.emailAddress;\n\n        const {\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded,\n            userId } = this.state;\n\n        const courseJSON = { title, description, estimatedTime, materialsNeeded, userId }\n\n        context.data.createCourse(courseJSON, emailAddress, password)\n            .then(errors => {\n                if (errors.length) {\n                    this.setState({ errors });\n                } else {\n                    alert(`Course has been created`);\n                    this.props.history.push('/');\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                this.props.history.push('/error');\n            });\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n    render() {\n        const {\n            errors,\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded\n        } = this.state\n\n        return (\n            <div className=\"bounds course--detail\">\n                <h1>Create Course</h1>\n                <div>\n                    \n                    <Form\n                        cancel={this.cancel}\n                        errors={errors}\n                        submit={this.submit}\n                        submitButtonText=\"Create Course\"\n                        elements={() => (\n                            <div>\n                                <div className=\"grid-66\">\n                                    <div className=\"course--header\">\n                                        <h4 className=\"course--label\">Course</h4>\n                                        <React.Fragment>\n                                            <input\n                                                id=\"title\"\n                                                name=\"title\"\n                                                type=\"text\"\n                                                className=\"input-title course--title--input\"\n                                                value={title}\n                                                onChange={this.change}\n                                                placeholder=\"Course Title\" />\n                                        </React.Fragment>\n                                    </div>\n                                    {/* course description */}\n                                    <div className=\"course--description\">\n                                        <React.Fragment>\n                                            <textarea\n                                                id=\"description\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                value={description}\n                                                onChange={this.change}\n                                                placeholder=\"Course description...\" />\n                                        </React.Fragment>\n                                    </div>\n                                </div>\n\n                                {/* right side of form */}\n                                <div className=\"grid-25 grid-right\">\n                                    <div className=\"course--stats\">\n                                        <ul className=\"course--stats--list\">\n                                            <li className=\"course--stats--list--item\">\n                                                <h4>Estimated Time</h4>\n                                                <div>\n                                                    <React.Fragment>\n                                                        <input\n                                                            id=\"estimatedTime\"\n                                                            name=\"estimatedTime\"\n                                                            type=\"text\"\n                                                            className=\"course--time--input\"\n                                                            value={estimatedTime}\n                                                            onChange={this.change}\n                                                            placeholder=\"Hours\" />\n                                                    </React.Fragment>\n                                                </div>\n                                            </li>\n                                            <li className=\"course--stats--list--item\">\n                                                <h4>Materials Needed</h4>\n                                                <div>\n                                                    <React.Fragment>\n                                                        <textarea\n                                                            id=\"materialsNeeded\"\n                                                            name=\"materialsNeeded\"\n                                                            value={materialsNeeded}\n                                                            onChange={this.change}\n                                                            placeholder=\"List materials...\" />\n                                                    </React.Fragment>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        )} />\n                </div>\n            </div>\n        );\n    };\n};\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport Form from './Form';\n\n\nexport default class UpdateCourse extends Component {\n\n    constructor(props, context) {\n        // const { context } = this.props;\n        super(props, context);\n        this.state = {\n            courses: [],\n            errors: [],\n            password: null,\n            emailAddress: null,\n            title: '',\n            description: '',\n            estimatedTime: '',\n            materialsNeeded: '',\n            id: '',\n            userId: null\n\n        };\n    }\n\n    componentDidMount() {\n        this.isLoggedIn();\n    }\n\n    async isLoggedIn() {\n        const { context } = this.props;\n        const authUser = context.authenticatedUser;\n        if (authUser) {\n            await this.setState({ 'emailAddress': authUser.emailAddress, 'password': authUser.password, 'userId': authUser.id, });\n        }\n        this.getCourseDetails();                  \n    }\n\n    getCourseDetails() {\n        fetch(`http://localhost:5000/api/courses/${this.props.match.params.id}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    courses: data.course,\n                    title: data.course.title,\n                    description: data.course.description,\n                    estimatedTime: data.course.estimatedTime,\n                    materialsNeeded: data.course.materialsNeeded,\n                    id: data.course.id\n                })\n            })\n            .catch(err => (Error('There seems to be problem ', err)));\n    }\n\n\n    change = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n    submit = () => {\n        const { context } = this.props;\n        const password = context.password;\n        const emailAddress = this.state.emailAddress;\n\n        const {\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded,\n            id,\n            userId } = this.state;\n\n        const courseJSON = { title, description, estimatedTime, materialsNeeded, userId }\n\n        context.data.updateCourse(courseJSON, id, emailAddress, password)\n            .then(errors => {\n                if (errors.length) {\n                        alert(`NOT UPDATED. SEE ERRORS.`);\n                    this.setState({ errors });\n                } else {\n                        alert(`Course has been updated`);                    \n                    this.props.history.push('/');\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                this.props.history.push('/error');\n            });\n    }\n\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const {\n            errors,\n            title,\n            description,\n            estimatedTime,\n            materialsNeeded\n        } = this.state\n\n        return (\n            <div>\n\n                <hr />\n                <div className=\"bounds course--detail\">\n                    <h1>Update Course</h1>\n                    <div>\n\n                        <Form\n                            cancel={this.cancel}\n                            errors={errors}\n                            submit={this.submit}\n                            submitButtonText=\"Update Course\"\n                            elements={() => (\n                                <div>\n                                    <div className=\"grid-66\">\n                                        <div className=\"course--header\">\n                                            <h4 className=\"course--label\">Course</h4>\n                                            <React.Fragment>\n                                                <input\n                                                    id=\"title\"\n                                                    name=\"title\"\n                                                    type=\"text\"\n                                                    className=\"input-title course--title--input\"\n                                                    placeholder=\"Course title...\"\n                                                    value={title}\n                                                    onChange={this.change} />\n                                            </React.Fragment>\n\n                                            <div className=\"course--description\">\n                                                <React.Fragment>\n                                                    <textarea\n                                                        id=\"description\"\n                                                        name=\"description\"\n                                                        type=\"text\"\n                                                        placeholder=\"Course description...\"\n                                                        value={description}\n                                                        onChange={this.change} />\n                                                </React.Fragment>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div className=\"grid-25 grid-right\">\n                                            <div className=\"course--stats\">\n                                                <ul className=\"course--stats--list\">\n                                                    <li key=\"Estimated Time\">\n                                                        <h4>Estimated Time</h4>\n                                                        <div>\n                                                            <React.Fragment>\n                                                                <input\n                                                                    id=\"estimatedTime\"\n                                                                    name=\"estimatedTime\"\n                                                                    type=\"text\"\n                                                                    className=\"course--time--input\"\n                                                                    placeholder=\"Hours\"\n                                                                    value={estimatedTime}\n                                                                    onChange={this.change} />\n                                                            </React.Fragment>\n                                                        </div>\n                                                    </li>\n                                                    <li key=\"Materials\">\n                                                        <h4>Materials Needed</h4>\n                                                        <div>\n                                                            <textarea\n                                                                id=\"materialsNeeded\"\n                                                                name=\"materialsNeeded\"\n                                                                placeholder=\"List materials...\"\n                                                                value={materialsNeeded}\n                                                                onChange={this.change}\n                                                            />\n                                                        </div>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )} />\n\n                    </div>\n                </div>\n            </div>\n\n        );\n    };\n};\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import config from '../config';\nimport Form from './Form';\n\nexport default class UserSignIn extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            emailAddress: '',\n            password: '',\n            errors: [],\n        }\n    }\n\n    render() {\n\n        const {\n            emailAddress,\n            password,\n            errors,\n        } = this.state;\n\n        return (\n\n            <div>\n             \n                <hr />\n                <div className=\"bounds\">\n                    <div className=\"grid-33 centered signin\">\n                        <h1>Sign In</h1>\n                        <div>                            \n                            <Form\n                                cancel={this.cancel}\n                                errors={errors}\n                                submit={this.submit}\n                                submitButtonText=\"Sign In\"\n                                elements={() => (\n                                    <React.Fragment>\n                                        <input\n                                            id=\"emailAddress\"\n                                            name=\"emailAddress\"\n                                            type=\"text\"\n                                            value={emailAddress}\n                                            onChange={this.change}\n                                            placeholder=\"Email Address\" />\n                                        <input\n                                            id=\"password\"\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={password}\n                                            onChange={this.change}\n                                            placeholder=\"Password\" />\n                                    </React.Fragment>\n                                )} />\n\n                        </div>\n                        <p>&nbsp;</p>\n                        <p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    change = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    submit = () => {\n        const { context } = this.props;\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\n        const { emailAddress, password } = this.state;\n\n        context.actions.signIn(emailAddress, password)\n            .then((user) => {\n                if (user === null) {\n                    this.setState(() => {\n                        return { errors: ['Sign-in was NOT successful. Try again.'] };\n                    });\n                } else {                    \n                    this.props.history.push(from);\n                }\n            })\n            .catch((error) => {\n                this.props.history.push('/error');\n            });\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n\n\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\n\nexport default class UserSignUp extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"emailAddress\": \"\",\n            \"password\": \"\",\n            \"errors\": [],\n        };\n    }\n\n    render() {\n        const {\n            firstName,\n            lastName,\n            emailAddress,\n            password,\n            errors,\n        } = this.state;\n\n        return (\n            <div className=\"bounds\">\n                <div className=\"grid-33 centered signin\">\n                    <h1>Sign Up</h1>\n\n                    <Form\n                        cancel={this.cancel}\n                        errors={errors}\n                        submit={this.submit}\n                        submitButtonText=\"Sign Up\"\n                        elements={() => (\n                            <React.Fragment>\n                                <input\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    type=\"text\"\n                                    value={firstName}\n                                    onChange={this.change}\n                                    placeholder=\"First Name\" />\n                                <input\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    type=\"text\"\n                                    value={lastName}\n                                    onChange={this.change}\n                                    placeholder=\"Last Name\" />\n                                <input\n                                    id=\"emailAddress\"\n                                    name=\"emailAddress\"\n                                    type=\"email\"\n                                    value={emailAddress}\n                                    onChange={this.change}\n                                    placeholder=\"Email\" />\n                                <input\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={this.change}\n                                    placeholder=\"Password\" />\n                            </React.Fragment>\n                        )} />\n                    <p>\n                        Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!\n          </p>\n                </div>\n            </div >\n        );\n    }\n\n    change = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState(() => {\n            return {\n                [name]: value\n            };\n        });\n    }\n\n    submit = () => {\n\n        const { context } = this.props;\n        const {\n            firstName,\n            lastName,\n            emailAddress,\n            password,\n        } = this.state;\n\n        // Create user\n        const user = {\n            firstName,\n            lastName,\n            emailAddress,\n            password\n        };\n\n        context.data.createUser(user)\n            .then(errors => {\n                if (errors.length) {\n                    this.setState({ errors });\n                } else {\n                    context.actions.signIn(emailAddress, password)\n                        .then(() => {\n                            this.props.history.push('/');\n                        });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                this.props.history.push('/error');\n            });\n    }\n\n    cancel = () => {\n        this.props.history.push('/');\n    }\n\n}","import React from 'react';\n\nexport default () => (\n  <div className=\"bounds\">\n    <h1>Not Found</h1>\n    <p>Sorry! We couldn't find the page you're looking for.</p>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport withContext from './Context';\nimport './styles/global.css';\n\n// import components\nimport Header from './components/Header';\nimport CourseList from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignOut from './components/UserSignOut';\nimport UserSignUp from './components/UserSignUp';\nimport NotFound from './components/NotFound';\n\n\n// assign components value of context\nconst HeaderWithContext = withContext(Header);\nconst CourseListWithContext = withContext(CourseList);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter basename=\"/\">\n        <div className=\"App\">\n          <HeaderWithContext />\n          <Switch>\n            {/* private routes must be above other routes */}\n            <PrivateRoute exact path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n            <PrivateRoute exact path=\"/courses/create\" component={CreateCourseWithContext} />\n\n            <Route exact path=\"/\" component={CourseListWithContext} />\n            <Route exact path=\"/courses/:id\" component={CourseDetailWithContext} />\n\n            <Route path=\"/signin\" component={UserSignInWithContext} />\n            <Route path=\"/signup\" component={UserSignUpWithContext} />\n            <Route path=\"/signout\" component={UserSignOutWithContext} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({context}) => {\n  context.actions.signOut();\n  return (\n    <Redirect to=\"/\" />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './Context';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}